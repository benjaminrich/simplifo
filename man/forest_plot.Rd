% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forest_plot.R
\name{forest_plot}
\alias{forest_plot}
\alias{forest_plot_main}
\alias{forest_plot_table}
\title{Forest plot}
\usage{
forest_plot(
  fodat,
  param = unique(fodat$param)[1],
  covars = NULL,
  lab = NULL,
  lim = NULL,
  scale = c("relative", "absolute"),
  refline = if (scale == "relative") 1 else NULL,
  refrange = if (scale == "relative" && isTRUE(logscale)) c(0.8, 1.25) else if (scale ==
    "relative") c(0.8, 1.2) else NULL,
  logscale = FALSE,
  widths = c(0.7, 0.3)
)

forest_plot_main(
  fodat,
  lab = NULL,
  lim = lim,
  scale = c("relative", "absolute"),
  refline = NULL,
  refrange = NULL,
  logscale = FALSE
)

forest_plot_table(fodat, scale = c("relative", "absolute"))
}
\arguments{
\item{fodat}{A \code{data.frame} in the format produced by \code{\link[=prepare_forest_data]{prepare_forest_data()}}.}

\item{param}{The parameter to plot.}

\item{covars}{The covariates to plot.}

\item{lab}{Label for the x-axis.}

\item{lim}{Limits for the x-axis.}

\item{scale}{Can be either "relative" or "absolute". Relative scale means
that values will be normalized by their reference value, while absolute
scale means values remain unchanged.}

\item{refline}{Value of reference line.}

\item{refrange}{Limits for the reference range.}

\item{logscale}{Use log-scale for the x-axis?}

\item{widths}{A numeric vector of length 2 specifying the relative widths of
the main plot and the table containing the numeric values. By default, the
split is 70:30 for the main plot and the table.}
}
\value{
An object of class \code{forest_plot}. This is a list of 2 components,
\code{main_plot} and \code{table_plot}, which are both \code{ggplot} objects. It can be
plotted and printed (with the same result).
}
\description{
Create a forest plot from prepared data.
}
\details{
\code{forest_plot_main()} returns just the main plot, and
\code{forest_plot_table()} returns just the table portion of the plot. Sometimes
it can be useful to have these separately.
}
\examples{
fodat <- sample_forest_data

# Use nice labels
covar.labels <- mappings::mapping(c(
        sex  = "Sex",
        wt   = "Body Weight (kg)",
        crcl = "Creatinine Clearance (mL/min)"))

param.labels = mappings::mapping(c(
        cmax = "C[max]",
        auc  = "AUC['0-8h']",
        cl   = "CL",
        vc   = "Vc"))

my_forest_plot <- function(param, covars=NULL) {
  lab <- parse(text=paste("`Fold Change in`", param.labels(param), "`Relative to Reference`", sep="~"))
  forest_plot(fodat, param=param, covars=covars, scale="relative", lab=lab, logscale=TRUE)
}

my_forest_plot("cl")

my_forest_plot("vc")

my_forest_plot("cmax")

my_forest_plot("auc")

}
\seealso{
\code{\link[=prepare_forest_data]{prepare_forest_data()}}.
}
